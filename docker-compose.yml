version: '3'
networks:
  skeletonbr:
    driver: bridge

services:
  php:
    container_name: 'php-skeleton'
    networks:
      - skeletonbr
    build:
      context: ./docker/php
    volumes:
      - '.:/var/www/html'
      - './docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro'
    environment:
      COMPOSER_MEMORY_LIMIT: 2G
    working_dir: '/var/www/html'
    extra_hosts:
    # for step debugging with Xdebug
      - 'host.docker.internal:host-gateway'

  nginx:
    container_name: 'nginx-skeleton'
    image: nginx:1.23.2-alpine
    networks:
      - skeletonbr
    depends_on:
      - php
    ports:
      - 80:80
    volumes:
      - '.:/var/www/html'
      - './docker/nginx/conf.d/default.nginx:/etc/nginx/conf.d/default.conf'

  postgres:
    container_name: 'pg-skeleton'
    image: postgres:15.1-alpine
    networks:
      - skeletonbr
    ports:
      - '5431:5432'
    working_dir: /app
    restart: always
    environment:
      POSTGRES_DB: 'skeletonbr'
      POSTGRES_USER: 'devuser'
      POSTGRES_PASSWORD: '97y2amDpm'
    volumes:
      - ./db/dump:/app/dump
      - ./db/postgresql:/var/lib/postgresql/data

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###
volumes:
  postgresql:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
